#ifndef QUEUE_H_
#define QUEUE_H_

namespace std{
    template <typename T>
    class queue {
    private:

    public:
        // types
        using value_type            = T;
        using size_type             = size_t;

        queue();
        ~queue();
        bool                empty() const;
        size_type           size() const;
        value_type&         front();
        const value_type&   front() const;
        value_type&         back();
        const value_type&   back() const;
        void                push(const value_type& val);
        template<class... Args>
        void                emplace(Args&&... args);
        void                pop();
        void                swap(queue& x);
    };

    /* BEGIN IMPLEMENTATION */

    // constructor/destructor


} // end namespace std


#endif